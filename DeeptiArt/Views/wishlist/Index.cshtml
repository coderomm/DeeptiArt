@model IEnumerable<DeeptiArt.Models.WishlistViewModel>
@{
    ViewBag.Title = "Wishlist";
}

<!-- Main -->
<main>
    <!-- Breadcrumb -->
    <div class="py-3 bg-gray-100">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-lg-6 my-2">
                    <h1 class="m-0 h4 text-center text-lg-start">Wishlist</h1>
                </div>
                <div class="col-lg-6 my-2">
                    <ol class="breadcrumb dark-link m-0 small justify-content-center justify-content-lg-end">
                        <li class="breadcrumb-item">
                            <a class="text-nowrap" href="~/"><i class="fa-solid fa-home"></i>Home</a>
                        </li>
                        <li class="breadcrumb-item text-nowrap active" aria-current="page">Wishlist</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>
    <!-- End Breadcrumb -->
    <!-- Cart Table -->
    <div class="py-6">
        <div class="container">
            <div class="row">
                <!-- Wishlist Table -->


                @if (ViewBag.IsEmptyWishlist)
                {
                    <div id="emptyWishlist">
                        <h4 class="text-primary my-4 text-center">Empty Wishlist !</h4>
                        <h5 class="text-primary my-4 text-center">
                            <a href="~/collections" class="btn btn-primary btn-sm rounded-2">Add Items</a>
                        </h5>
                    </div>
                }
                else
                {
                    foreach (var item in Model)
                    {
                        <div class="col-6 col-lg-3">
                            <div class="product-card-1 rounded-1 data-product-id-container-div" data-product-id="@item.ProductTbl.Id" data-wishlist-id="@item.WishlistTbl.WishlistID">
                                <div class="product-card-image">
                                    <div class="badge-ribbon"><span class="badge bg-danger">Sale</span></div>
                                    <div class="product-action">

                                        <a href="@Url.Action("collectiondetails", "collections", new { productname = Url.Encode(item.ProductTbl.Name.Replace(" ", "-").ToLower()) })" class="btn btn-outline-primary">
                                            <i class="fa-regular fa-eye"></i>
                                        </a>

                                    </div>
                                    <div class="product-media">
                                        <a href="@Url.Action("collectiondetails", "collections", new { productname = Url.Encode(item.ProductTbl.Name.Replace(" ", "-").ToLower()) })">
                                            <img class="img-fluid" src="~/Content/assets/projectImages/Products/@item.ProductTbl.Image" title="@item.ProductTbl.Name" alt="@item.ProductTbl.Name">
                                        </a>
                                        <div class="product-cart-btn">
                                            <button type="button" class="direct-add-to-cart-btn btn btn-primary btn-sm w-100">
                                                <i class="fa-solid fa-cart-shopping"></i> Add to cart
                                            </button>
                                        </div>
                                    </div>
                                </div>
                                <div class="product-card-info">
                                    <div class="product-meta small">
                                        <a href="@Url.RouteUrl("catcollections", new {catname = Url.Encode(item.ProductTbl.CatName.Replace(" ", "-").ToLower()) })">@item.ProductTbl.CatName</a>,
                                        <a href="@Url.RouteUrl("subcatcollections", new {catname = Url.Encode(item.ProductTbl.CatName.Replace(" ", "-").ToLower()), subcatname = Url.Encode(item.ProductTbl.SubcatName.Replace(" ", "-").ToLower()) })">@item.ProductTbl.SubcatName</a>
                                    </div>
                                    <div class="rating-star text">
                                        @{
                                            int totalreviews = 0;
                                            int totalrating = 0;
                                            double avgrating = 0;
                                            double emptystarsoutoffive = 0;
                                        }
                                        @foreach (var Reviewitem in ViewBag.ReviewTables)
                                        {
                                            if (item.ProductTbl.Id == Reviewitem.productid)
                                            {
                                                totalreviews++;
                                                totalrating += Convert.ToInt32(Reviewitem.rating);
                                            }

                                            avgrating = totalreviews > 0 ? (double)totalrating / totalreviews : 0;
                                            avgrating = Math.Round(avgrating, 2); // Round to two decimal places
                                            emptystarsoutoffive = 5 - avgrating;
                                        }
                                        <span>
                                            @for (int i = 1; i <= 5; i++)
                                            {
                                                if (i <= avgrating)
                                                {
                                                    <i class="fa-solid fa-star active"></i>
                                                }
                                                else
                                                {
                                                    <i class="fa-regular fa-star"></i>
                                                }
                                            }
                                        </span>

                                        <span>(@(totalreviews < 1 ? "0 review" : (totalreviews > 1 ? totalreviews + " reviews" : " review")))</span>
                                    </div>
                                    <h6 class="product-title">
                                        <a href="@Url.Action("collectiondetails", "collections", new { productname = Url.Encode(item.ProductTbl.Name.Replace(" ", "-").ToLower()) })">
                                            @item.ProductTbl.Name
                                        </a>
                                    </h6>
                                    <div class="product-price">
                                        <span class="text-primary"><i class="fa-solid fa-indian-rupee-sign"></i>@item.ProductTbl.Price.<small>00</small></span>
                                        <del class="fs-sm text-muted"><i class="fa-solid fa-indian-rupee-sign"></i>@item.ProductTbl.GrossPrice.<small>00</small></del>
                                    </div>
                                    <button class="remove-from-wishlist-btn btn btn-mode w-50 btn-sm rounded-5 mt-3 px-3" typeof="button"><i class="fa-solid fa-trash"></i> Remove</button>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
    <!-- Wishlist Table -->
</main>
<!-- End Main -->
